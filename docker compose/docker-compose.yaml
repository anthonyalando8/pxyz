version: '3.9'

services:
  # üîπ Traefik - the single entrypoint
  traefik:
    image: traefik:v3.0
    container_name: traefik
    command:
      - "--api.dashboard=true"
      - "--api.insecure=true"   # ‚ö†Ô∏è remove in production
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
    ports:
      - "80:80"      # All traffic goes here
      - "8080:8080"  # Dashboard
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - micro_net

  # üîπ Redis
  redis:
    image: redis:7
    container_name: redis
    networks:
      - micro_net
  # zookeeper:
  #   image: confluentinc/cp-zookeeper:7.5.0
  #   container_name: zookeeper
  #   environment:
  #     ZOOKEEPER_CLIENT_PORT: 2181
  #   networks:
  #     - micro_net

  # kafka:
  #   image: confluentinc/cp-kafka:7.5.0
  #   container_name: kafka
  #   environment:
  #     KAFKA_BROKER_ID: 1
  #     KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
  #     KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
  #     KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,PLAINTEXT_HOST://0.0.0.0:9093
  #     KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:9093
  #     KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
  #   ports:
  #     - "9092:9092"  # internal (for containers in micro_net)
  #     - "9093:9093"  # external (for your host machine)
  #   networks:
  #     - micro_net
  #   depends_on:
  #     - zookeeper

  # üîπ Auth Service
  auth-service:
    build:
      context: .
      dockerfile: services/auth-service/Dockerfile
    container_name: auth-service
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.user-auth.rule=PathPrefix(`/auth`)"
      - "traefik.http.services.user-auth.loadbalancer.server.port=8001"
    env_file:
      - ./services/auth-service/.env
    volumes:
      - ./services/auth-service/secrets:/app/secrets:ro
      - ./uploads:/app/uploads
    environment:
      DB_HOST: pgpool
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASSWORD: 2000
      DB_NAME: pxyz
      REDIS_ADDR: redis:6379
      SYSTEM_ADMIN_PASSWORD: 96211581#Aa
      SYSTEM_ADMIN_EMAIL: anthonyalando8@gmail.com
    networks:
      - micro_net
    depends_on:
      - redis
      # - core-service
      # - session-service
      # - email-service
      # - otp-service
      # - u-access-service

  # üîπ Session Service
  # session-service:
  #   build:
  #     context: .
  #     dockerfile: services/session-mngt/Dockerfile
  #   container_name: session-service
  #   labels:
  #     - "traefik.enable=true"
  #     - "traefik.http.routers.user-session.rule=PathPrefix(`/session`)"
  #     - "traefik.http.services.user-session.loadbalancer.server.port=8002"
  #   env_file:
  #     - ./services/session-mngt/.env
  #   volumes:
  #     - ./services/session-mngt/secrets:/app/secrets:ro
  #   environment:
  #     DB_HOST: host.docker.internal
  #     DB_PORT: 5432
  #     DB_USER: postgres
  #     DB_PASSWORD: 2000
  #     DB_NAME: pxyz
  #     REDIS_ADDR: redis:6379
  #     JWT_PRIVATE_KEY_PATH: /app/secrets/jwt_private.pem
  #     JWT_PUBLIC_KEY_PATH: /app/secrets/jwt_public.pem
  #   networks:
  #     - micro_net
  #   depends_on:
  #     - redis
  #     - u-access-service

  # # üîπ Account Service
  # account-service:
  #   build:
  #     context: .
  #     dockerfile: services/account-service/Dockerfile
  #   container_name: account-service
  #   labels:
  #     - "traefik.enable=true"
  #     - "traefik.http.routers.user-account.rule=PathPrefix(`/account`)"
  #     - "traefik.http.services.user-account.loadbalancer.server.port=8004"
  #   env_file:
  #     - ./services/account-service/.env
  #   networks:
  #     - micro_net
  #   environment:
  #     DB_CONN: postgres://postgres:2000@host.docker.internal:5432/pxyz
  #     REDIS_ADDR: redis:6379
  #     EMAIL_SVC_ADDR: email-service:8011
  #     GRPC_ADDR: :8004
  #     REDIS_PASS:
  #   depends_on:
  #     - redis
  #     - email-service

  # üîπ KYC Service
  # kyc-service:
  #   build:
  #     context: .
  #     dockerfile: services/kyc-service/Dockerfile
  #   container_name: kyc-service
  #   labels:
  #     - "traefik.enable=true"
  #     - "traefik.http.routers.kyc.rule=PathPrefix(`/kyc`)"
  #     - "traefik.http.services.kyc.loadbalancer.server.port=8005"
  #   env_file:
  #     - ./services/kyc-service/.env
  #   volumes:
  #     - ./services/kyc-service/secrets:/app/secrets:ro
  #     - ./uploads:/app/uploads
  #   networks:
  #     - micro_net
  #   environment:
  #     HTTP_ADDR: :8005
  #     DB_CONN: postgres://postgres:2000@host.docker.internal:5432/pxyz
  #     REDIS_ADDR: redis:6379
  #     REDIS_PASS:
  #     EMAIL_SVC_ADDR: email-service:8011
  #     JWT_PUBLIC_KEY_PATH: /app/secrets/jwt_public.pem
  #   depends_on:
  #     - redis
  #     - email-service

  # üîπ Cashier Service
  # cashier-service:
  #   build:
  #     context: .
  #     dockerfile: services/cashier-service/Dockerfile
  #   container_name: cashier-service
  #   labels:
  #     - "traefik.enable=true"
  #     - "traefik.http.routers.cashier.rule=PathPrefix(`/cashier`)"
  #     - "traefik.http.services.cashier.loadbalancer.server.port=8021"
  #   env_file:
  #     - ./services/cashier-service/.env
  #   volumes:
  #     - ./services/cashier-service/secrets:/app/secrets:ro
  #   networks:
  #     - micro_net
  #   environment:
  #     HTTP_ADDR: :8021
  #     DB_HOST: host.docker.internal
  #     DB_PORT: 5432
  #     DB_USER: postgres
  #     DB_PASSWORD: 2000
  #     DB_NAME: pxyz
  #     REDIS_ADDR: redis:6379
  #     REDIS_PASS:
  #     JWT_PRIVATE_KEY_PATH: /app/secrets/jwt_private.pem
  #     JWT_PUBLIC_KEY_PATH: /app/secrets/jwt_public.pem
  #     JWT_AUDIENCE: pxyz-clients
  #     JWT_ISSUER: auth-service
  #     JWT_ACCESS_TTL: 5h
  #     MPESA_CONSUMER_KEY: WE0ODHDhooeTBWhIxIwbqM3L7cd9SSxTagXCrZhynGmwRiAp
  #     MPESA_CONSUMER_SECRET: fDLAvAoRFT6QBnKgrxNrUfA3Mozx0btGpm7DIGqVBfn44adGiDHtdKlJnJ9jbN1K
  #     MPESA_PASSKEY: bfb279f9aa9bdbcf158e97dd71a467cd2e0c893059b10f78e6b72ada1ed2c919
  #     MPESA_SHORT_CODE: 174379
  #     MPESA_TILL_NUMBER: 174379
  #   depends_on:
  #     - redis
  #     - auth-service

  # üîπ SMS Service
  # sms-service:
  #   build:
  #     context: .
  #     dockerfile: common-services/sms-service/Dockerfile
  #   container_name: sms-service
  #   labels:
  #     - "traefik.enable=true"
  #     - "traefik.http.routers.sms.rule=PathPrefix(`/sms`)"
  #     - "traefik.http.services.sms.loadbalancer.server.port=8012"
  #   env_file:
  #     - ./common-services/sms-service/.env
  #   volumes:
  #     - ./common-services/sms-service/secrets:/app/secrets:ro
  #   networks:
  #     - micro_net
  #   environment:
  #     GRPC_ADDR: :8012
  #     REDIS_PASS:
  #     JWT_PUBLIC_KEY_PATH: /app/secrets/jwt_public.pem
  #     WA_KEY: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1aWQiOiJieXVmU1hvSnFHY2NPcWNXOW82NXRWMWI4WVdsMEd3aSIsInJvbGUiOiJ1c2VyIiwiaWF0IjoxNzU2NzQ3MjMzfQ.npCbVvXb2i_gAkBr3iXi_spHVbBG4l_ZXgqevm8jfjg
  #     WA_URL: https://www.whatsupsender.co.ke
  #     WA_SENDER: 254792207010
  #     SMS_URL: https://smsportal.hostpinnacle.co.ke/SMSApi/send
  #     SMS_KEY:
  #     SENDER: DERINANCE
  #     USER_ID: samderinance
  #     PASSWORD: Fbq75Ttz
  #     REDIS_ADDR: redis:6379
  #   depends_on:
  #     - redis
  #     - email-service
  # # üîπ Email Service
  # email-service:
  #   build:
  #     context: .
  #     dockerfile: common-services/email-service/Dockerfile
  #   container_name: email-service
  #   labels:
  #     - "traefik.enable=true"
  #     - "traefik.http.routers.email.rule=PathPrefix(`/email`)"
  #     - "traefik.http.services.email.loadbalancer.server.port=8011"
  #   env_file:
  #     - ./common-services/email-service/.env
  #   environment:
  #     DB_HOST: host.docker.internal
  #     DB_PORT: 5432
  #     DB_USER: postgres
  #     DB_PASSWORD: 2000
  #     DB_NAME: pxyz
  #     REDIS_ADDR: redis:6379
  #     GRPCPort: :8011
  #     SMTPHost: mail.derinance.com
  #     SMTPUser: no_reply@derinance.com
  #     SMTPPort: 465
  #     SMTPPass: B-e02G#D-T7O*8Qe

  #   networks:
  #     - micro_net
  #   depends_on:
  #     - redis

  # # üîπ OTP Service
  # otp-service:
  #   build:
  #     context: .
  #     dockerfile: common-services/otp-service/Dockerfile
  #   container_name: otp-service
  #   labels:
  #     - "traefik.enable=true"
  #     - "traefik.http.routers.otp.rule=PathPrefix(`/otp`)"
  #     - "traefik.http.services.otp.loadbalancer.server.port=8003"
  #   env_file:
  #     - ./common-services/otp-service/.env
  #   environment:
  #     DB_CONN: postgres://postgres:2000@host.docker.internal:5432/pxyz
  #     REDIS_ADDR: redis:6379
  #     EMAIL_SVC_ADDR: email-service:8011
  #   networks:
  #     - micro_net
  #   depends_on:
  #     - redis
  #     - email-service

  # # üîπ Core Service
  # core-service:
  #   build:
  #     context: .
  #     dockerfile: common-services/core-service/Dockerfile
  #   container_name: core-service
  #   labels:
  #     - "traefik.enable=true"
  #     - "traefik.http.routers.core.rule=PathPrefix(`/core`)"
  #     - "traefik.http.services.core.loadbalancer.server.port=8051"
  #   env_file:
  #     - ./common-services/core-service/.env
  #   volumes:
  #     - ./common-services/core-service/secrets:/app/secrets:ro
  #     - ./uploads:/app/uploads
  #   networks:
  #     - micro_net
  #   environment:
  #     DB_HOST: host.docker.internal
  #     DB_PORT: 5432
  #     DB_USER: postgres
  #     DB_PASSWORD: 2000
  #     DB_NAME: pxyz
  #     REDIS_ADDR: redis:6379
  #     HTTP_ADDR: :8051
  #     GRPC_ADDR: :8052
  #     REDIS_PASS:
  #     JWT_PUBLIC_KEY_PATH: /app/secrets/jwt_public.pem
  #   depends_on:
  #     - redis
  # notification-service:
  #   build:
  #     context: .
  #     dockerfile: common-services/notification-service/Dockerfile
  #   container_name: notification-service
  #   labels:
  #     - "traefik.enable=true"
  #     - "traefik.http.routers.user-notification.rule=PathPrefix(`/user/notifications`)"
  #     - "traefik.http.services.user-notification.loadbalancer.server.port=8013"
  #   env_file:
  #     - ./common-services/notification-service/.env
  #   volumes:
  #     - ./common-services/notification-service/secrets:/app/secrets:ro
  #     - ./common-services/notification-service/templates:/app/templates:ro
  #     - ./uploads:/app/uploads
  #   networks:
  #     - micro_net
  #   environment:
  #     DB_HOST: host.docker.internal
  #     DB_PORT: 5432
  #     DB_USER: postgres
  #     DB_PASSWORD: 2000
  #     DB_NAME: pxyz
  #     REDIS_ADDR: redis:6379
  #     HTTP_ADDR: :8013
  #     GRPC_ADDR: :8014
  #     REDIS_PASS:
  #     JWT_PUBLIC_KEY_PATH: /app/secrets/jwt_public.pem
  #   depends_on:
  #     - redis

  # # üîπ User Access Service
  # u-access-service:
  #   build:
  #     context: .
  #     dockerfile: services/u-access-service/Dockerfile
  #   container_name: u-access-service
  #   labels:
  #     - "traefik.enable=true"
  #     - "traefik.http.routers.uaccess.rule=PathPrefix(`/urbac`)"
  #     - "traefik.http.services.uaccess.loadbalancer.server.port=8031"
  #   env_file:
  #     - ./services/u-access-service/.env
  #   volumes:
  #     - ./services/u-access-service/secrets:/app/secrets:ro
  #     - ./uploads:/app/uploads
  #   networks:
  #     - micro_net
  #   environment:
  #     DB_HOST: host.docker.internal
  #     DB_PORT: 5432
  #     DB_USER: postgres
  #     DB_PASSWORD: 2000
  #     DB_NAME: pxyz
  #     REDIS_ADDR: redis:6379
  #     HTTP_ADDR: :8031
  #     GRPC_ADDR: :8032
  #     REDIS_PASS:
  #     JWT_PUBLIC_KEY_PATH: /app/secrets/jwt_public.pem
  #   depends_on:
  #     - redis
      
  # üîπ Partner Service
  # partner-service:
  #   build:
  #     context: .
  #     dockerfile: partner-services/partner-service/Dockerfile
  #   container_name: partner-service
  #   labels:
  #     - "traefik.enable=true"
  #     - "traefik.http.routers.partner-svc.rule=PathPrefix(`/partner/svc`)"
  #     - "traefik.http.services.partner-svc.loadbalancer.server.port=7510"
  #   env_file:
  #     - ./partner-services/partner-service/.env
  #   volumes:
  #     - ./partner-services/partner-service/secrets:/app/secrets:ro
  #   networks:
  #     - micro_net
  #   environment:
  #     DB_HOST: host.docker.internal
  #     DB_PORT: 5432
  #     DB_USER: postgres
  #     DB_PASSWORD: 2000
  #     DB_NAME: pxyz_partner
  #     HTTP_ADDR: :7510
  #     GRPC_ADDR: :7511
  #     REDIS_ADDR: redis:6379
  #     REDIS_PASS: ""
  #     JWT_PUBLIC_KEY_PATH: /app/secrets/jwt_public.pem
  #   depends_on:
  #     - redis
  # ptn-auth-service:
  #   build:
  #     context: .
  #     dockerfile: partner-services/ptn-auth-service/Dockerfile
  #   container_name: ptn-auth-service
  #   labels:
  #     - "traefik.enable=true"
  #     - "traefik.http.routers.partner-auth.rule=PathPrefix(`/partner/auth`)"
  #     - "traefik.http.services.partner-auth.loadbalancer.server.port=7500"
  #   env_file:
  #     - ./partner-services/ptn-auth-service/.env
  #   volumes:
  #     - ./partner-services/ptn-auth-service/secrets:/app/secrets:ro
  #     - ./uploads:/app/uploads
  #   environment:
  #     DB_HOST: host.docker.internal
  #     DB_PORT: 5432
  #     DB_USER: postgres
  #     DB_PASSWORD: 2000
  #     DB_NAME: pxyz_partner
  #     REDIS_ADDR: redis:6379
  #     SYSTEM_ADMIN_PASSWORD: 96211581#Aa
  #     SYSTEM_ADMIN_EMAIL: anthonyalando8@gmail.com
  #   networks:
  #     - micro_net
  #   depends_on:
  #     - redis
  #     - core-service
  #     - ptn-session-service
  #     - email-service
  #     - otp-service

  # # üîπ Session Service
  # ptn-session-service:
  #   build:
  #     context: .
  #     dockerfile: partner-services/ptn-session-mngt/Dockerfile
  #   container_name: ptn-session-service
  #   labels:
  #     - "traefik.enable=true"
  #     - "traefik.http.routers.partner-session.rule=PathPrefix(`/partner/session`)"
  #     - "traefik.http.services.partner-session.loadbalancer.server.port=7503"
  #   env_file:
  #     - ./partner-services/ptn-session-mngt/.env
  #   volumes:
  #     - ./partner-services/ptn-session-mngt/secrets:/app/secrets:ro
  #   environment:
  #     DB_HOST: host.docker.internal
  #     DB_PORT: 5432
  #     DB_USER: postgres
  #     DB_PASSWORD: 2000
  #     DB_NAME: pxyz_partner
  #     REDIS_ADDR: redis:6379
  #     JWT_PRIVATE_KEY_PATH: /app/secrets/jwt_private.pem
  #     JWT_PUBLIC_KEY_PATH: /app/secrets/jwt_public.pem
  #   networks:
  #     - micro_net
  #   depends_on:
  #     - redis

  # admin-auth-service:
  #   build:
  #     context: .
  #     dockerfile: admin-services/admin-auth-service/Dockerfile
  #   container_name: admin-auth-service
  #   labels:
  #     - "traefik.enable=true"
  #     - "traefik.http.routers.admin-auth.rule=PathPrefix(`/admin/auth`)"
  #     - "traefik.http.services.admin-auth.loadbalancer.server.port=7000"
  #   env_file:
  #     - ./admin-services/admin-auth-service/.env
  #   volumes:
  #     - ./admin-services/admin-auth-service/secrets:/app/secrets:ro
  #     - ./uploads:/app/uploads
  #   environment:
  #     DB_HOST: host.docker.internal
  #     DB_PORT: 5432
  #     DB_USER: postgres
  #     DB_PASSWORD: 2000
  #     DB_NAME: pxyz_admin
  #     REDIS_ADDR: redis:6379
  #     SYSTEM_ADMIN_PASSWORD: 96211581#Aa
  #     SYSTEM_ADMIN_EMAIL: anthonyalando8@gmail.com
  #   networks:
  #     - micro_net
  #   depends_on:
  #     - redis
  #     - core-service
  #     - admin-session-service
  #     - email-service
  #     - otp-service

  # # üîπ Session Service
  # admin-session-service:
  #   build:
  #     context: .
  #     dockerfile: admin-services/admin-session-mngt/Dockerfile
  #   container_name: admin-session-service
  #   labels:
  #     - "traefik.enable=true"
  #     - "traefik.http.routers.admin-session.rule=PathPrefix(`/admin/session`)"
  #     - "traefik.http.services.admin-session.loadbalancer.server.port=7003"
  #   env_file:
  #     - ./admin-services/admin-session-mngt/.env
  #   volumes:
  #     - ./admin-services/admin-session-mngt/secrets:/app/secrets:ro
  #   environment:
  #     DB_HOST: host.docker.internal
  #     DB_PORT: 5432
  #     DB_USER: postgres
  #     DB_PASSWORD: 2000
  #     DB_NAME: pxyz_admin
  #     REDIS_ADDR: redis:6379
  #     JWT_PRIVATE_KEY_PATH: /app/secrets/jwt_private.pem
  #     JWT_PUBLIC_KEY_PATH: /app/secrets/jwt_public.pem
  #   networks:
  #     - micro_net
  #   depends_on:
  #     - redis

  # admin-service:
  #   build:
  #     context: .
  #     dockerfile: admin-services/admin-service/Dockerfile
  #   container_name: admin-service
  #   labels:
  #     - "traefik.enable=true"
  #     - "traefik.http.routers.admin-svc.rule=PathPrefix(`/admin/svc`)"
  #     - "traefik.http.services.admin-svc.loadbalancer.server.port=7010"
  #   env_file:
  #     - ./admin-services/admin-service/.env
  #   volumes:
  #     - ./admin-services/admin-service/secrets:/app/secrets:ro
  #     - ./uploads:/app/uploads
  #   environment:
  #     DB_HOST: host.docker.internal
  #     DB_PORT: 5432
  #     DB_USER: postgres
  #     DB_PASSWORD: 2000
  #     DB_NAME: pxyz_admin
  #     REDIS_ADDR: redis:6379
  #   networks:
  #     - micro_net
  #   depends_on:
  #     - redis
  #     - core-service
  #     - admin-session-service
  #     - email-service
  # accounting-service:
  #   build:
  #     context: .
  #     dockerfile: common-services/accounting-service/Dockerfile
  #   container_name: accounting-service
  #   labels:
  #     - "traefik.enable=true"
  #     - "traefik.http.routers.accounting.rule=PathPrefix(`/accounting`)"
  #     - "traefik.http.services.accounting.loadbalancer.server.port=8024"
  #   env_file:
  #     - ./common-services/accounting-service/.env
  #   volumes:
  #     - ./common-services/accounting-service/secrets:/app/secrets:ro
  #     - ./uploads:/app/uploads
  #   networks:
  #     - micro_net
  #   environment:
  #     DB_HOST: host.docker.internal
  #     DB_PORT: 5432
  #     DB_USER: postgres
  #     DB_PASSWORD: 2000
  #     DB_NAME: pxyz_fx
  #     REDIS_ADDR: redis:6379
  #     GRPC_ADDR: :8024
  #     REDIS_PASS:
  #     JWT_PUBLIC_KEY_PATH: /app/secrets/jwt_public.pem
  #   depends_on:
  #     - redis

  # receipt-service:
  #   build:
  #     context: .
  #     dockerfile: common-services/receipt-service/Dockerfile
  #   container_name: receipt-service
  #   labels:
  #     - "traefik.enable=true"
  #     - "traefik.http.routers.receipt.rule=PathPrefix(`/receipt`)"
  #     - "traefik.http.services.receipt.loadbalancer.server.port=8026"
  #   env_file:
  #     - ./common-services/receipt-service/.env
  #   volumes:
  #     - ./uploads:/app/uploads
  #   networks:
  #     - micro_net
  #   environment:
  #     DB_HOST: host.docker.internal
  #     DB_PORT: 5432
  #     DB_USER: postgres
  #     DB_PASSWORD: 2000
  #     DB_NAME: pxyz_fx
  #     REDIS_ADDR: redis:6379
  #     GRPC_ADDR: :8026
  #     REDIS_PASS:
  #   depends_on:
  #     - redis
networks:
  micro_net:
    driver: bridge
