// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.32.0--rc1
// source: proto/admin/session.proto

package adminsessionpb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type UpdateSessionActivityRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SessionId     string                 `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	LastSeenAt    string                 `protobuf:"bytes,2,opt,name=last_seen_at,json=lastSeenAt,proto3" json:"last_seen_at,omitempty"` // RFC3339 timestamp
	IsActive      bool                   `protobuf:"varint,3,opt,name=is_active,json=isActive,proto3" json:"is_active,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateSessionActivityRequest) Reset() {
	*x = UpdateSessionActivityRequest{}
	mi := &file_proto_admin_session_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateSessionActivityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSessionActivityRequest) ProtoMessage() {}

func (x *UpdateSessionActivityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_admin_session_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSessionActivityRequest.ProtoReflect.Descriptor instead.
func (*UpdateSessionActivityRequest) Descriptor() ([]byte, []int) {
	return file_proto_admin_session_proto_rawDescGZIP(), []int{0}
}

func (x *UpdateSessionActivityRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *UpdateSessionActivityRequest) GetLastSeenAt() string {
	if x != nil {
		return x.LastSeenAt
	}
	return ""
}

func (x *UpdateSessionActivityRequest) GetIsActive() bool {
	if x != nil {
		return x.IsActive
	}
	return false
}

type UpdateSessionActivityResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Session       *Session               `protobuf:"bytes,1,opt,name=session,proto3" json:"session,omitempty"` // Return updated session details
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateSessionActivityResponse) Reset() {
	*x = UpdateSessionActivityResponse{}
	mi := &file_proto_admin_session_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateSessionActivityResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSessionActivityResponse) ProtoMessage() {}

func (x *UpdateSessionActivityResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_admin_session_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSessionActivityResponse.ProtoReflect.Descriptor instead.
func (*UpdateSessionActivityResponse) Descriptor() ([]byte, []int) {
	return file_proto_admin_session_proto_rawDescGZIP(), []int{1}
}

func (x *UpdateSessionActivityResponse) GetSession() *Session {
	if x != nil {
		return x.Session
	}
	return nil
}

type CreateSessionRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	UserId         string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	IsTemp         bool                   `protobuf:"varint,2,opt,name=is_temp,json=isTemp,proto3" json:"is_temp,omitempty"`
	DeviceId       string                 `protobuf:"bytes,3,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	IpAddress      string                 `protobuf:"bytes,4,opt,name=ip_address,json=ipAddress,proto3" json:"ip_address,omitempty"`
	UserAgent      string                 `protobuf:"bytes,5,opt,name=user_agent,json=userAgent,proto3" json:"user_agent,omitempty"`
	GeoLocation    string                 `protobuf:"bytes,6,opt,name=geo_location,json=geoLocation,proto3" json:"geo_location,omitempty"`
	DeviceMetadata string                 `protobuf:"bytes,7,opt,name=device_metadata,json=deviceMetadata,proto3" json:"device_metadata,omitempty"`
	IsActive       bool                   `protobuf:"varint,8,opt,name=is_active,json=isActive,proto3" json:"is_active,omitempty"`
	ExtraData      map[string]string      `protobuf:"bytes,9,rep,name=extra_data,json=extraData,proto3" json:"extra_data,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	IsSingleUse    bool                   `protobuf:"varint,10,opt,name=is_single_use,json=isSingleUse,proto3" json:"is_single_use,omitempty"`
	Purpose        string                 `protobuf:"bytes,11,opt,name=purpose,proto3" json:"purpose,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *CreateSessionRequest) Reset() {
	*x = CreateSessionRequest{}
	mi := &file_proto_admin_session_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateSessionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSessionRequest) ProtoMessage() {}

func (x *CreateSessionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_admin_session_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSessionRequest.ProtoReflect.Descriptor instead.
func (*CreateSessionRequest) Descriptor() ([]byte, []int) {
	return file_proto_admin_session_proto_rawDescGZIP(), []int{2}
}

func (x *CreateSessionRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *CreateSessionRequest) GetIsTemp() bool {
	if x != nil {
		return x.IsTemp
	}
	return false
}

func (x *CreateSessionRequest) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *CreateSessionRequest) GetIpAddress() string {
	if x != nil {
		return x.IpAddress
	}
	return ""
}

func (x *CreateSessionRequest) GetUserAgent() string {
	if x != nil {
		return x.UserAgent
	}
	return ""
}

func (x *CreateSessionRequest) GetGeoLocation() string {
	if x != nil {
		return x.GeoLocation
	}
	return ""
}

func (x *CreateSessionRequest) GetDeviceMetadata() string {
	if x != nil {
		return x.DeviceMetadata
	}
	return ""
}

func (x *CreateSessionRequest) GetIsActive() bool {
	if x != nil {
		return x.IsActive
	}
	return false
}

func (x *CreateSessionRequest) GetExtraData() map[string]string {
	if x != nil {
		return x.ExtraData
	}
	return nil
}

func (x *CreateSessionRequest) GetIsSingleUse() bool {
	if x != nil {
		return x.IsSingleUse
	}
	return false
}

func (x *CreateSessionRequest) GetPurpose() string {
	if x != nil {
		return x.Purpose
	}
	return ""
}

type CreateSessionResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Session       *Session               `protobuf:"bytes,1,opt,name=session,proto3" json:"session,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateSessionResponse) Reset() {
	*x = CreateSessionResponse{}
	mi := &file_proto_admin_session_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateSessionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSessionResponse) ProtoMessage() {}

func (x *CreateSessionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_admin_session_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSessionResponse.ProtoReflect.Descriptor instead.
func (*CreateSessionResponse) Descriptor() ([]byte, []int) {
	return file_proto_admin_session_proto_rawDescGZIP(), []int{3}
}

func (x *CreateSessionResponse) GetSession() *Session {
	if x != nil {
		return x.Session
	}
	return nil
}

type Session struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Id             string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId         string                 `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	AuthToken      string                 `protobuf:"bytes,3,opt,name=auth_token,json=authToken,proto3" json:"auth_token,omitempty"`
	DeviceId       string                 `protobuf:"bytes,4,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	IpAddress      string                 `protobuf:"bytes,5,opt,name=ip_address,json=ipAddress,proto3" json:"ip_address,omitempty"`
	UserAgent      string                 `protobuf:"bytes,6,opt,name=user_agent,json=userAgent,proto3" json:"user_agent,omitempty"`
	GeoLocation    string                 `protobuf:"bytes,7,opt,name=geo_location,json=geoLocation,proto3" json:"geo_location,omitempty"`
	DeviceMetadata string                 `protobuf:"bytes,8,opt,name=device_metadata,json=deviceMetadata,proto3" json:"device_metadata,omitempty"`
	IsActive       bool                   `protobuf:"varint,9,opt,name=is_active,json=isActive,proto3" json:"is_active,omitempty"`
	LastSeenAt     string                 `protobuf:"bytes,10,opt,name=last_seen_at,json=lastSeenAt,proto3" json:"last_seen_at,omitempty"`
	CreatedAt      string                 `protobuf:"bytes,11,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	IsSingleUse    bool                   `protobuf:"varint,12,opt,name=is_single_use,json=isSingleUse,proto3" json:"is_single_use,omitempty"`
	IsUsed         bool                   `protobuf:"varint,13,opt,name=is_used,json=isUsed,proto3" json:"is_used,omitempty"`
	Purpose        string                 `protobuf:"bytes,14,opt,name=purpose,proto3" json:"purpose,omitempty"`
	IsTemp         bool                   `protobuf:"varint,15,opt,name=is_temp,json=isTemp,proto3" json:"is_temp,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *Session) Reset() {
	*x = Session{}
	mi := &file_proto_admin_session_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Session) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Session) ProtoMessage() {}

func (x *Session) ProtoReflect() protoreflect.Message {
	mi := &file_proto_admin_session_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Session.ProtoReflect.Descriptor instead.
func (*Session) Descriptor() ([]byte, []int) {
	return file_proto_admin_session_proto_rawDescGZIP(), []int{4}
}

func (x *Session) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Session) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *Session) GetAuthToken() string {
	if x != nil {
		return x.AuthToken
	}
	return ""
}

func (x *Session) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *Session) GetIpAddress() string {
	if x != nil {
		return x.IpAddress
	}
	return ""
}

func (x *Session) GetUserAgent() string {
	if x != nil {
		return x.UserAgent
	}
	return ""
}

func (x *Session) GetGeoLocation() string {
	if x != nil {
		return x.GeoLocation
	}
	return ""
}

func (x *Session) GetDeviceMetadata() string {
	if x != nil {
		return x.DeviceMetadata
	}
	return ""
}

func (x *Session) GetIsActive() bool {
	if x != nil {
		return x.IsActive
	}
	return false
}

func (x *Session) GetLastSeenAt() string {
	if x != nil {
		return x.LastSeenAt
	}
	return ""
}

func (x *Session) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *Session) GetIsSingleUse() bool {
	if x != nil {
		return x.IsSingleUse
	}
	return false
}

func (x *Session) GetIsUsed() bool {
	if x != nil {
		return x.IsUsed
	}
	return false
}

func (x *Session) GetPurpose() string {
	if x != nil {
		return x.Purpose
	}
	return ""
}

func (x *Session) GetIsTemp() bool {
	if x != nil {
		return x.IsTemp
	}
	return false
}

type DeleteSessionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Token         string                 `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteSessionRequest) Reset() {
	*x = DeleteSessionRequest{}
	mi := &file_proto_admin_session_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteSessionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSessionRequest) ProtoMessage() {}

func (x *DeleteSessionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_admin_session_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSessionRequest.ProtoReflect.Descriptor instead.
func (*DeleteSessionRequest) Descriptor() ([]byte, []int) {
	return file_proto_admin_session_proto_rawDescGZIP(), []int{5}
}

func (x *DeleteSessionRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type DeleteAllSessionsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteAllSessionsRequest) Reset() {
	*x = DeleteAllSessionsRequest{}
	mi := &file_proto_admin_session_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteAllSessionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAllSessionsRequest) ProtoMessage() {}

func (x *DeleteAllSessionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_admin_session_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAllSessionsRequest.ProtoReflect.Descriptor instead.
func (*DeleteAllSessionsRequest) Descriptor() ([]byte, []int) {
	return file_proto_admin_session_proto_rawDescGZIP(), []int{6}
}

func (x *DeleteAllSessionsRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type ValidateSessionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Token         string                 `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ValidateSessionRequest) Reset() {
	*x = ValidateSessionRequest{}
	mi := &file_proto_admin_session_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ValidateSessionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateSessionRequest) ProtoMessage() {}

func (x *ValidateSessionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_admin_session_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateSessionRequest.ProtoReflect.Descriptor instead.
func (*ValidateSessionRequest) Descriptor() ([]byte, []int) {
	return file_proto_admin_session_proto_rawDescGZIP(), []int{7}
}

func (x *ValidateSessionRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type ValidateSessionResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Valid         bool                   `protobuf:"varint,1,opt,name=valid,proto3" json:"valid,omitempty"`
	UserId        string                 `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Error         string                 `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
	SessionType   string                 `protobuf:"bytes,4,opt,name=session_type,json=sessionType,proto3" json:"session_type,omitempty"` // "main", "temporary"
	Purpose       string                 `protobuf:"bytes,5,opt,name=purpose,proto3" json:"purpose,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ValidateSessionResponse) Reset() {
	*x = ValidateSessionResponse{}
	mi := &file_proto_admin_session_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ValidateSessionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateSessionResponse) ProtoMessage() {}

func (x *ValidateSessionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_admin_session_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateSessionResponse.ProtoReflect.Descriptor instead.
func (*ValidateSessionResponse) Descriptor() ([]byte, []int) {
	return file_proto_admin_session_proto_rawDescGZIP(), []int{8}
}

func (x *ValidateSessionResponse) GetValid() bool {
	if x != nil {
		return x.Valid
	}
	return false
}

func (x *ValidateSessionResponse) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ValidateSessionResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *ValidateSessionResponse) GetSessionType() string {
	if x != nil {
		return x.SessionType
	}
	return ""
}

func (x *ValidateSessionResponse) GetPurpose() string {
	if x != nil {
		return x.Purpose
	}
	return ""
}

type ListSessionsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListSessionsRequest) Reset() {
	*x = ListSessionsRequest{}
	mi := &file_proto_admin_session_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListSessionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSessionsRequest) ProtoMessage() {}

func (x *ListSessionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_admin_session_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSessionsRequest.ProtoReflect.Descriptor instead.
func (*ListSessionsRequest) Descriptor() ([]byte, []int) {
	return file_proto_admin_session_proto_rawDescGZIP(), []int{9}
}

func (x *ListSessionsRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type ListSessionsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Sessions      []*Session             `protobuf:"bytes,1,rep,name=sessions,proto3" json:"sessions,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListSessionsResponse) Reset() {
	*x = ListSessionsResponse{}
	mi := &file_proto_admin_session_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListSessionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSessionsResponse) ProtoMessage() {}

func (x *ListSessionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_admin_session_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSessionsResponse.ProtoReflect.Descriptor instead.
func (*ListSessionsResponse) Descriptor() ([]byte, []int) {
	return file_proto_admin_session_proto_rawDescGZIP(), []int{10}
}

func (x *ListSessionsResponse) GetSessions() []*Session {
	if x != nil {
		return x.Sessions
	}
	return nil
}

type DeleteSessionByIDRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SessionId     string                 `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteSessionByIDRequest) Reset() {
	*x = DeleteSessionByIDRequest{}
	mi := &file_proto_admin_session_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteSessionByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSessionByIDRequest) ProtoMessage() {}

func (x *DeleteSessionByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_admin_session_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSessionByIDRequest.ProtoReflect.Descriptor instead.
func (*DeleteSessionByIDRequest) Descriptor() ([]byte, []int) {
	return file_proto_admin_session_proto_rawDescGZIP(), []int{11}
}

func (x *DeleteSessionByIDRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

type Empty struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Empty) Reset() {
	*x = Empty{}
	mi := &file_proto_admin_session_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_proto_admin_session_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_proto_admin_session_proto_rawDescGZIP(), []int{12}
}

var File_proto_admin_session_proto protoreflect.FileDescriptor

const file_proto_admin_session_proto_rawDesc = "" +
	"\n" +
	"\x19proto/admin/session.proto\x12\radmin.session\"|\n" +
	"\x1cUpdateSessionActivityRequest\x12\x1d\n" +
	"\n" +
	"session_id\x18\x01 \x01(\tR\tsessionId\x12 \n" +
	"\flast_seen_at\x18\x02 \x01(\tR\n" +
	"lastSeenAt\x12\x1b\n" +
	"\tis_active\x18\x03 \x01(\bR\bisActive\"Q\n" +
	"\x1dUpdateSessionActivityResponse\x120\n" +
	"\asession\x18\x01 \x01(\v2\x16.admin.session.SessionR\asession\"\xdb\x03\n" +
	"\x14CreateSessionRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12\x17\n" +
	"\ais_temp\x18\x02 \x01(\bR\x06isTemp\x12\x1b\n" +
	"\tdevice_id\x18\x03 \x01(\tR\bdeviceId\x12\x1d\n" +
	"\n" +
	"ip_address\x18\x04 \x01(\tR\tipAddress\x12\x1d\n" +
	"\n" +
	"user_agent\x18\x05 \x01(\tR\tuserAgent\x12!\n" +
	"\fgeo_location\x18\x06 \x01(\tR\vgeoLocation\x12'\n" +
	"\x0fdevice_metadata\x18\a \x01(\tR\x0edeviceMetadata\x12\x1b\n" +
	"\tis_active\x18\b \x01(\bR\bisActive\x12Q\n" +
	"\n" +
	"extra_data\x18\t \x03(\v22.admin.session.CreateSessionRequest.ExtraDataEntryR\textraData\x12\"\n" +
	"\ris_single_use\x18\n" +
	" \x01(\bR\visSingleUse\x12\x18\n" +
	"\apurpose\x18\v \x01(\tR\apurpose\x1a<\n" +
	"\x0eExtraDataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"I\n" +
	"\x15CreateSessionResponse\x120\n" +
	"\asession\x18\x01 \x01(\v2\x16.admin.session.SessionR\asession\"\xc6\x03\n" +
	"\aSession\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\x12\x1d\n" +
	"\n" +
	"auth_token\x18\x03 \x01(\tR\tauthToken\x12\x1b\n" +
	"\tdevice_id\x18\x04 \x01(\tR\bdeviceId\x12\x1d\n" +
	"\n" +
	"ip_address\x18\x05 \x01(\tR\tipAddress\x12\x1d\n" +
	"\n" +
	"user_agent\x18\x06 \x01(\tR\tuserAgent\x12!\n" +
	"\fgeo_location\x18\a \x01(\tR\vgeoLocation\x12'\n" +
	"\x0fdevice_metadata\x18\b \x01(\tR\x0edeviceMetadata\x12\x1b\n" +
	"\tis_active\x18\t \x01(\bR\bisActive\x12 \n" +
	"\flast_seen_at\x18\n" +
	" \x01(\tR\n" +
	"lastSeenAt\x12\x1d\n" +
	"\n" +
	"created_at\x18\v \x01(\tR\tcreatedAt\x12\"\n" +
	"\ris_single_use\x18\f \x01(\bR\visSingleUse\x12\x17\n" +
	"\ais_used\x18\r \x01(\bR\x06isUsed\x12\x18\n" +
	"\apurpose\x18\x0e \x01(\tR\apurpose\x12\x17\n" +
	"\ais_temp\x18\x0f \x01(\bR\x06isTemp\",\n" +
	"\x14DeleteSessionRequest\x12\x14\n" +
	"\x05token\x18\x01 \x01(\tR\x05token\"3\n" +
	"\x18DeleteAllSessionsRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\".\n" +
	"\x16ValidateSessionRequest\x12\x14\n" +
	"\x05token\x18\x01 \x01(\tR\x05token\"\x9b\x01\n" +
	"\x17ValidateSessionResponse\x12\x14\n" +
	"\x05valid\x18\x01 \x01(\bR\x05valid\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\x12\x14\n" +
	"\x05error\x18\x03 \x01(\tR\x05error\x12!\n" +
	"\fsession_type\x18\x04 \x01(\tR\vsessionType\x12\x18\n" +
	"\apurpose\x18\x05 \x01(\tR\apurpose\".\n" +
	"\x13ListSessionsRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\"J\n" +
	"\x14ListSessionsResponse\x122\n" +
	"\bsessions\x18\x01 \x03(\v2\x16.admin.session.SessionR\bsessions\"9\n" +
	"\x18DeleteSessionByIDRequest\x12\x1d\n" +
	"\n" +
	"session_id\x18\x01 \x01(\tR\tsessionId\"\a\n" +
	"\x05Empty2\x94\x05\n" +
	"\x13AdminSessionService\x12`\n" +
	"\x0fValidateSession\x12%.admin.session.ValidateSessionRequest\x1a&.admin.session.ValidateSessionResponse\x12Z\n" +
	"\rCreateSession\x12#.admin.session.CreateSessionRequest\x1a$.admin.session.CreateSessionResponse\x12r\n" +
	"\x15UpdateSessionActivity\x12+.admin.session.UpdateSessionActivityRequest\x1a,.admin.session.UpdateSessionActivityResponse\x12J\n" +
	"\rDeleteSession\x12#.admin.session.DeleteSessionRequest\x1a\x14.admin.session.Empty\x12R\n" +
	"\x11DeleteAllSessions\x12'.admin.session.DeleteAllSessionsRequest\x1a\x14.admin.session.Empty\x12W\n" +
	"\fListSessions\x12\".admin.session.ListSessionsRequest\x1a#.admin.session.ListSessionsResponse\x12R\n" +
	"\x11DeleteSessionByID\x12'.admin.session.DeleteSessionByIDRequest\x1a\x14.admin.session.EmptyB)Z'genproto/admin/sessionpb;adminsessionpbb\x06proto3"

var (
	file_proto_admin_session_proto_rawDescOnce sync.Once
	file_proto_admin_session_proto_rawDescData []byte
)

func file_proto_admin_session_proto_rawDescGZIP() []byte {
	file_proto_admin_session_proto_rawDescOnce.Do(func() {
		file_proto_admin_session_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_admin_session_proto_rawDesc), len(file_proto_admin_session_proto_rawDesc)))
	})
	return file_proto_admin_session_proto_rawDescData
}

var file_proto_admin_session_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_proto_admin_session_proto_goTypes = []any{
	(*UpdateSessionActivityRequest)(nil),  // 0: admin.session.UpdateSessionActivityRequest
	(*UpdateSessionActivityResponse)(nil), // 1: admin.session.UpdateSessionActivityResponse
	(*CreateSessionRequest)(nil),          // 2: admin.session.CreateSessionRequest
	(*CreateSessionResponse)(nil),         // 3: admin.session.CreateSessionResponse
	(*Session)(nil),                       // 4: admin.session.Session
	(*DeleteSessionRequest)(nil),          // 5: admin.session.DeleteSessionRequest
	(*DeleteAllSessionsRequest)(nil),      // 6: admin.session.DeleteAllSessionsRequest
	(*ValidateSessionRequest)(nil),        // 7: admin.session.ValidateSessionRequest
	(*ValidateSessionResponse)(nil),       // 8: admin.session.ValidateSessionResponse
	(*ListSessionsRequest)(nil),           // 9: admin.session.ListSessionsRequest
	(*ListSessionsResponse)(nil),          // 10: admin.session.ListSessionsResponse
	(*DeleteSessionByIDRequest)(nil),      // 11: admin.session.DeleteSessionByIDRequest
	(*Empty)(nil),                         // 12: admin.session.Empty
	nil,                                   // 13: admin.session.CreateSessionRequest.ExtraDataEntry
}
var file_proto_admin_session_proto_depIdxs = []int32{
	4,  // 0: admin.session.UpdateSessionActivityResponse.session:type_name -> admin.session.Session
	13, // 1: admin.session.CreateSessionRequest.extra_data:type_name -> admin.session.CreateSessionRequest.ExtraDataEntry
	4,  // 2: admin.session.CreateSessionResponse.session:type_name -> admin.session.Session
	4,  // 3: admin.session.ListSessionsResponse.sessions:type_name -> admin.session.Session
	7,  // 4: admin.session.AdminSessionService.ValidateSession:input_type -> admin.session.ValidateSessionRequest
	2,  // 5: admin.session.AdminSessionService.CreateSession:input_type -> admin.session.CreateSessionRequest
	0,  // 6: admin.session.AdminSessionService.UpdateSessionActivity:input_type -> admin.session.UpdateSessionActivityRequest
	5,  // 7: admin.session.AdminSessionService.DeleteSession:input_type -> admin.session.DeleteSessionRequest
	6,  // 8: admin.session.AdminSessionService.DeleteAllSessions:input_type -> admin.session.DeleteAllSessionsRequest
	9,  // 9: admin.session.AdminSessionService.ListSessions:input_type -> admin.session.ListSessionsRequest
	11, // 10: admin.session.AdminSessionService.DeleteSessionByID:input_type -> admin.session.DeleteSessionByIDRequest
	8,  // 11: admin.session.AdminSessionService.ValidateSession:output_type -> admin.session.ValidateSessionResponse
	3,  // 12: admin.session.AdminSessionService.CreateSession:output_type -> admin.session.CreateSessionResponse
	1,  // 13: admin.session.AdminSessionService.UpdateSessionActivity:output_type -> admin.session.UpdateSessionActivityResponse
	12, // 14: admin.session.AdminSessionService.DeleteSession:output_type -> admin.session.Empty
	12, // 15: admin.session.AdminSessionService.DeleteAllSessions:output_type -> admin.session.Empty
	10, // 16: admin.session.AdminSessionService.ListSessions:output_type -> admin.session.ListSessionsResponse
	12, // 17: admin.session.AdminSessionService.DeleteSessionByID:output_type -> admin.session.Empty
	11, // [11:18] is the sub-list for method output_type
	4,  // [4:11] is the sub-list for method input_type
	4,  // [4:4] is the sub-list for extension type_name
	4,  // [4:4] is the sub-list for extension extendee
	0,  // [0:4] is the sub-list for field type_name
}

func init() { file_proto_admin_session_proto_init() }
func file_proto_admin_session_proto_init() {
	if File_proto_admin_session_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_admin_session_proto_rawDesc), len(file_proto_admin_session_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_admin_session_proto_goTypes,
		DependencyIndexes: file_proto_admin_session_proto_depIdxs,
		MessageInfos:      file_proto_admin_session_proto_msgTypes,
	}.Build()
	File_proto_admin_session_proto = out.File
	file_proto_admin_session_proto_goTypes = nil
	file_proto_admin_session_proto_depIdxs = nil
}
