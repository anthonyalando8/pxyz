# k8s/deployments/auth-service.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: auth-service
  namespace: microservices
  labels:
    app: auth-service
spec:
  replicas: 3  # Start with 3 replicas
  selector:
    matchLabels:
      app: auth-service
  template:
    metadata:
      labels:
        app: auth-service
    spec:
      containers:
      - name: auth-service
        image: YOUR_REGISTRY/auth-service:latest  # Replace with your image
        imagePullPolicy: Always
        ports:
        - containerPort: 8001
          name: http
          protocol: TCP
        env:
        - name: DB_HOST
          valueFrom:
            configMapKeyRef:
              name: common-config
              key: DB_HOST
        - name: DB_PORT
          valueFrom:
            configMapKeyRef:
              name: common-config
              key: DB_PORT
        - name: DB_NAME
          valueFrom:
            configMapKeyRef:
              name: common-config
              key: DB_NAME
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              name: db-secret
              key: user
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: db-secret
              key: password
        - name: KAFKA_BROKERS
          valueFrom:
            configMapKeyRef:
              name: common-config
              key: KAFKA_BROKERS
        - name: REDIS_ADDR
          valueFrom:
            configMapKeyRef:
              name: common-config
              key: REDIS_ADDR
        - name: SYSTEM_ADMIN_PASSWORD
          valueFrom:
            secretKeyRef:
              name: admin-secret
              key: password
        - name: SYSTEM_ADMIN_EMAIL
          valueFrom:
            secretKeyRef:
              name: admin-secret
              key: email
        volumeMounts:
        - name: jwt-keys
          mountPath: /app/secrets
          readOnly: true
        - name: ui-files
          mountPath: /app/ui
          readOnly: true
        - name: uploads
          mountPath: /app/uploads
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /api/v1/auth/health
            port: 8001
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /api/v1/auth/health
            port: 8001
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 2
      volumes:
      - name: jwt-keys
        secret:
          secretName: jwt-secret
      - name: ui-files
        configMap:
          name: ui-files
      - name: uploads
        persistentVolumeClaim:
          claimName: uploads-pvc